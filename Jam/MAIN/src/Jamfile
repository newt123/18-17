#
# Jamfile to build Jam (a make(1)-like program)
#

#
# We have some different files for UNIX, VMS, and NT.
#

switch $(OS)
{
case VMS :	code = vms ;
case OPENVMS :	code = vms ;
case NT :	code = nt ;
case * :	code = unix ;
}

#
# Ugly support for the .yy file: yyacc is a preprocessor to yacc.
# From gram.yy it makes gram.y and gramtab.h.
#

rule UserObject
{
    if $(>:S) = .yy 
    {
	if $(UNIX)
	{
	    DEPENDS $(<:S=.y) $(<:B)tab.h : $(>) ;
	    YYacc $(<:S=.y) $(<:B)tab.h : $(>) ;
	    LOCATE on $(<:S=.y) $(<:B)tab.h = $(LOCATE_TARGET) ;
	    Clean clean : $(<:S=.y) $(<:B)tab.h ;
	}
	Yacc $(<:S=.c) : $(<:S=.y) ;
	Cc $(<) : $(<:S=.c) ; 
    }
}

actions YYacc
{
	sh yyacc $(>) $(<)
}

#
# The guts of the Jamfile: how to build Jam
#

Main 		jam : jam.c ;
LinkLibraries 	jam : libjam.a ;

Library         libjam.a : 
		    command.c compile.c exec$(code).c expand.c
		    file$(code).c glob.c hash.c headers.c jamgram.yy
		    lists.c make.c make1.c newstr.c option.c parse.c
		    regexp.c rules.c scan.c search.c timestamp.c
		    variable.c ;

#
# On UNIX, we install this stuff for easy use.
# On VMS, one must define a symbol:  jam :== $jam.exe -f jambase
# On NT, you're on your own.
#

if $(UNIX)
{
	InstallBin /usr/local/bin : jam ;
	InstallLib /usr/local/lib/jam : Jambase ;
	InstallMan /usr/local/man : jam.1 Jambase.5 Jamfile.5 ;
}
