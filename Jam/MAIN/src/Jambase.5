.TH JAM 5 "30 August 1993"
.SH NAME
Jambase \- 
.BR jam (1)
boilerplate
.SH SYNOPSIS
.B /usr/share/lib/jam/Jambase
.br
.B Jamfile
.SH DESCRIPTION
.PP
.B Jambase
contains a set of
.B jam
rule definitions that provide roughly
.BR make (1)-like
functionality.
.B Jam
reads
.BR Jambase ,
which in turn includes the
.B Jamfile
from the current directory.
The rules defined and variables used for the 
.B Jamfile 
are as follows:
.SS Rules
.PP
.IP "MAIN image : sources ;"
.IP
Compiles
.I sources
and links them into
.IR image .
.I Image
becomes a dependency of 
.IR exe ,
itself a dependency of
.IR all .
.IP "LIBS image : libraries ;"
.IP
Adds 
.I libraries
as dependencies of
.I image
and includes them during the linking.
.IP "SETUID image ;"
.IP
Sets the setuid bit on
.I image
after linking.
.IP "UNDEFINES image : symbols ;"
.IP
Tries to convice the loader that symbols need to be "undefined" for
the linking to work.
.IP "LIBRARY library : sources ;"
.IP
Compiles
.I sources
and archives them into 
.IR library .
The intermediate objects are deleted.
.I Library 
becomes a dependency of 
.IR lib ,
itself a dependency of
.IR all .
.IP "OBJECT object : source ;"
.IP
Compiles a single source file
.I source
into
.IR object .
This rule is used by
.B MAIN
and 
.BR LIBRARY .
Arranges for 
.I source
to be scanned for header file includes when then become dependencies of
.IR object .
Such dependencies are "soft": missing headers are not an error.
.IP
For 
.IR source , 
the following suffixes are recognised:
.RS
.IP .c
C source file
.IP .l
.IR lex (1)
source file.
The resuling lex.yy.c is renamed to be the same base as the
.IR source .
.IP .y
.IR yacc (1)
source file.  
The resulting y.tab.c and y.tab.h are renamed to the same base as
.IR source .
.PP
All other suffixes are passed to the rule
.IP
CCUSER object : source ;
.PP
to be defined in the user's
.I Jamfile
(or elsewhere).
.RE
.IP "BULK directory : sources ;"
.IP
Copies
.I sources
into 
.IR directory .
All targets become dependencies of
.IR files ,
itself a dependency of
.IR all .
.IP "FILE target : source ;"
.IP
Copies 
.I source
into 
.IR target .
.I Target
become a dependency of
.IR files ,
itself a dependency of
.IR all .
.IP "SHELL image : source ;"
.IP
Copies 
.I source
into the executable 
.IR sh(1)
script
.IR image .
.I Image
become a dependency of
.IR shell ,
itself a dependency of
.IR all .
.IP "INSTALLBIN sources ; "
.IP
Copy
.I sources
into /usr/local/bin.
All targets become dependencies of
.IR install .
.IP "INSTALLLIB sources ;"
.IP
Copy
.I sources
into /usr/local/lib.
All targets become dependencies of
.IR install .
.IP "INSTALLMAN sources ;"
.IP
Copy
.I sources
into the appropriate subdirectory of /usr/local/man.
All targets become dependencies of
.IR install .
.IP "RMTEMPS targets : sources ;"
.IP
Marks
.I sources
as temporary with the
.I TEMPORARY 
rule, and deletes
.I sources
once
.I targets
are built.
Must be the last rule invoked on
.IR targets .
Used internally by
.BR OBJECT .
.SS Variables
.PP
AR (default
.IR "ar ru" )
.IP
The archiver used for
.BR LIBRARY .
.PP 
BINDIR (default
.IR "/usr/local/bin" )
.IP
The install directory for 
.BR INSTALLBIN .
.PP 
CC (default
.IR cc )
.IP
C compiler used for
.BR OBJECT .
.PP 
CCFLAGS (no default)
.IP
Flags handed to the C compiler for
.BR OBJECT .
N.B. 
.I OPTIM
is also handed to the C compiler.
.PP 
EXEMODE (default 
.IR 711 )
.IP
Permissions for executables linked with
.BR MAIN .
.PP 
FILEMODE (default
.IR 644 )
.IP
Permissions for files copied by
.B FILE 
or
.BR BULK .
.PP
HDRPATTERN (default ^#[\\t ]*include[\\t ]*[<"](.*)[">].*$)
.IP
The
.IR regexp (3)
pattern for finding header file includes in source files.
The 
.B OBJECT
rule sets the 
.I Jam
special variable
.I HDRSCAN
to
.I $(HDRPATTERN)
for all of its sources.
The found header files are made dependencies of the target to
.BR OBJECT .
.PP 
HDRS (no default)
.IP
Directories to be scanned for header files and handed to the C
compiler with -I.  The
.B OBJECT
rule sets
.I HDRS
to 
.I $(HDRS)
for each of its sources.
.PP
LEX (default 
.IR lex  )
.IP
The 
.IR lex (1)
command and flags.
.PP 
LIBDIR (default 
.IR /usr/local/lib )
.IP
The target directory for 
.BR INSTALLLIB .
.PP
LINK (default 
.IR cc )
.IP
The linker.
.PP
LINKFLAGS (default 
.IR $(CCFLAGS) )
.IP
Flags handed to the linker.
.PP
LINKLIBS (no default)
.IP
Libraries to hand to the linker.
These libraries are not dependencies of the target image.
.PP
LOCATE_TARGET (no default)
.IP
The directory for object modules and other intermediate files generated by
.BR OBJECT .
This works by setting the
.I Jam
special variable
.I LOCATE 
to the value of 
.I $(LOCATE_TARGET)
for each of 
.BR OBJECT 's 
targets.
.PP
MV (default 
.IR "mv -f" )
.IP
The file rename command and options.
.PP
OPTIM (default 
.IR -O )
.IP
More flags handed to the C compiler.
.PP
RANLIB (default 
.IR ranlib )
.IP
If set, the command string to be invoked on each library after archiving.
.PP
RM (default 
.IR "rm -f" )
.IP
The command and options to remove a file.
.PP
SEARCH_SOURCE (no default)
.IP
The directory to find sources listed with
.BR MAIN ,
.BR LIBRARY ,
.BR OBJECT ,
.BR BULK ,
.BR FILE ,
.BR SHELL ,
.BR INSTALLBIN ,
.BR INSTALLLIB ,
and
.BR INSTALLMAN
rules.
This works by setting the
.I Jam
special variable
.I SEARCH 
to the value of 
.I $(SEARCH_SOURCE)
for each of the rules' sources.
.PP
SHELLHEADER (default 
.IR "#!/bin/sh" )
.IP
A string inserted to the first line of every file created by the
.B SHELL
rule.
.PP
SHELLMODE (default 
.IR 755 )
.IP
Permissions for files installed by
.BR SHELL .
.PP
STDHDRS (default 
.IR /usr/include )
.IP
Directories where headers can be found without resorting to using the
-I flag to the C compiler.
.PP
UNDEFFLAG (default 
.IR "\-u _" )
.IP
The flag prefixed to each symbol for the
.B UNDEFINES 
rule.
.PP
YACC (default 
.IR "yacc -d" )
.IP
The 
.IR yacc (1)
command and flags.
.PP
JAMFILE (default
.IR Jamfile )
.IP
The user provided file listing the sources to be built.

.SH BUGS
.PP
Because libraries are passed unbound to the 
.B LINK 
rule as
.IR $(NEEDLIBS) , 
they cannot be located with 
.IR $(LOCATE) , 
because 
.I $(LOCATE)
affects only changes the bound file name.
.PP
There's no 
.IR yacc (1)
on VMS, so the guts of the rules are commented out.
